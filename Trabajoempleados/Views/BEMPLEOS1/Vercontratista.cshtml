@model Trabajoempleados.Models.combinados



@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layoutcontra.cshtml";

}

<link rel="stylesheet" href="~/css/styles.css">
<link rel="stylesheet" href="~/css/bootstrap-grid.css" />
<link rel="stylesheet" href="~/css/bootstrap-grid.min.css" />
<link rel="stylesheet" href="~/css/header-1.css" />
<link rel="stylesheet" href="~/css/style.css" />
<link rel="stylesheet" href="~/css/reset.min.css" />

<body>
    <main>
        <a name="up"></a>
        <section style="margin-left:5%" class="py-5 text-center container">
        </section>

        <h2 style="margin-left:450px;">Buscar por Categoria</h2>


        <form  style="margin-left:450px;" action="Indexecontratista" method="post">

            @Html.DropDownListFor(Model => Model.Categoria.Nombre, ViewData["items"] as IEnumerable<SelectListItem>, new { @Name = "nombre" })
            @Html.ValidationMessageFor(Model => Model.Categoria.Nombre, "", new { @class = "text-danger" })

            <input type="submit" value="Buscar" class="btn btn-success" />
        </form>




        <div class="containerx">



            @foreach (var item in Model.Empleos)
            {
                <div class="itemx">
                    @*@Html.DisplayFor(model => model.Logo)*@
                    <img width="360" height="215" src="@Url.Action("getImage2","BEMPLEOS1", new {Id= item.Id })" title="@item.Posicion" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></img>
                    <div class="itemx-text">
                        <h4 class="sizec">@item.Posicion - @item.IdEmpleo</h4>
                        <p>@item.Ubicacion</p>
                        <p>@item.Posicion</p>
                        <p>@item.Empresa</p>
                        <p>@item.Fechapubli</p>
                        <br />
                        @Html.ActionLink("Ver más", "Detailscontra", new { id = item.Id })
                    </div>
                </div>
            }

        </div>

    </main>
    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
        <script>
            $("txtsearch").on("keyup", function () {
                var txtenter = $(this).val();
                $("div").each(function (results) {
                    if (results != 0)
                    {
                        var id = $(this).find("td:nth-child(2)").text();
                        if (id.indexOf(txtenter) !== 0 && id.toLowerCase().indexOf(txtenter.toLowerCase()) < 0) {
                            $(this).hide();
                        }
                        else {
                            $(this).show();
                        }
                    }
                });
            });
        </script>*@


    @{ var cantidadPaginas = (int)Math.Ceiling((double)Model.TotalDeRegistros / Model.RegistrosPorPagina); }

    <!--Funcionalidad: Anterior y siguiente-->

    <ul class="pagination">
        @if (Model.PaginaActual == 1)
        {
            <li class="disabled">@Html.ActionLink("Anterior", null, new { idcontracheck = Model.idcontracheck, pagina = 1 })</li>

        }
        else
        {
            <li>@Html.ActionLink("Anterior", null, new { idcontracheck = Model.idcontracheck, pagina = Model.PaginaActual - 1 })</li>
        }

        @if (Model.PaginaActual == cantidadPaginas)
        {
            <li class="disabled">@Html.ActionLink("Siguiente", null, new { idcontracheck = Model.idcontracheck, pagina = cantidadPaginas })</li>

        }
        else
        {
            <li>@Html.ActionLink("Siguiente", null, new { idcontracheck = Model.idcontracheck, pagina = Model.PaginaActual + 1 })</li>
        }
    </ul>

    <!--Funcionalidad: Páginas-->

    @{ int Inicial = 1;
        var radio = 3;
        var cantidadMaximaDePaginas = radio * 2 + 1;
        int Final = (cantidadPaginas > cantidadMaximaDePaginas) ? cantidadMaximaDePaginas : cantidadPaginas;
        if (Model.PaginaActual > radio + 1)
        {
            Inicial = Model.PaginaActual - radio;
            if (cantidadPaginas > Model.PaginaActual + radio)
            {
                Final = Model.PaginaActual + radio;
            }
            else
            {
                Final = cantidadPaginas;
            }
        } }


    @*<ul class="pagination">
                @{Model.ValoresQueryString["pagina"] = 1; }
                <li>@Html.ActionLink("Primera", null, Model.ValoresQueryString)</li>
                @for (int i = Inicial; i <= Final; i++)
                {
                    Model.ValoresQueryString["pagina"] = i;
                    if (i == Model.PaginaActual)
                    {
        <li class="active">@Html.ActionLink(i.ToString(), null, Model.ValoresQueryString)</li> }
                        else
                        {
        <li>@Html.ActionLink(i.ToString(), null, Model.ValoresQueryString)</li>}
                    }
                @{Model.ValoresQueryString["pagina"] = cantidadPaginas; }
                <li>@Html.ActionLink("Ultima", null, Model.ValoresQueryString)</li>
            </ul>*@

    <a name="end"></a>
</body>


